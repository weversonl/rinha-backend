version: "3.5"
services:
  api1: &api
    build: .
    hostname: api1
    container_name: api1
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    network_mode: host
    env_file:
      - .env
    environment:
      SERVER_PORT: 8080
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "500MB"

    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8080/pessoas?t=jose || exit 1"]
      start_interval: 0.20s
      retries: 10
      interval: 0.20s
      timeout: 0.80s

  api2:
    <<: *api
    hostname: api2
    container_name: api2
    environment:
      SERVER_PORT: 8081

    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8081/pessoas?t=jose || exit 1"]
      start_interval: 0.20s
      retries: 10
      interval: 0.20s
      timeout: 0.80s

  nginx: # Load Balancer
    image: nginx:alpine
    container_name: rinhalb
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      api1:
        condition: service_healthy
      api2:
        condition: service_healthy
    network_mode: host
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "200MB"

  postgres:
    image: postgres:16.2
    container_name: rinhadb
    environment:
      POSTGRES_DB: rinhadb
      POSTGRES_USER: rinha
      POSTGRES_PASSWORD: rinha
    network_mode: host

    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
      # - ./postgresql.conf:/etc/postgresql/postgresql.conf

    command: postgres -c config_file=/docker-entrypoint-initdb.d/postgresql.conf

    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "1.6GB"

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rinha -d rinhadb -h localhost -p 5432"]
      start_interval: 1s
      retries: 10
      interval: 0.50s
      timeout: 0.50s

  redis:
    image: redis:latest
    container_name: rinhacache
    network_mode: host
    volumes:
      - redis-data:/data
    command: redis-server --save "" --appendonly no --protected-mode no
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "200MB"

volumes:
  postgres-data:
  redis-data: